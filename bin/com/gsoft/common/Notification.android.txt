package com.gsoft.common;

import android.app.Activity;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.support.v4.app.NotificationCompat;

import com.gsoft.common.R;

public class Notification {
	static int mNotificationID = 1;
	static NotificationCompat.Builder mBuilder = null;
	static NotificationManager mNotificationManager = null;
	static String mTitle;
	
	public static void notifyApp(Activity activity, String title) {
    	try {
    		Context context = activity.getApplicationContext();
    		// 처음 실행시
	    	if (mNotificationManager==null) {
	    		mTitle = title;
		    	mBuilder = new NotificationCompat.Builder(context);
		    	mBuilder.setSmallIcon(R.drawable.ic_launcher);
		    	mBuilder.setContentTitle(title);
		    	if (title!=null) {
		    		mBuilder.setContentText(title + " is running.");
		    	}
		    	else {
		    		mBuilder.setContentText(" is running.");
		    	}
		    	
		    	Intent resultIntent = activity.getIntent();
		    	
		    	PendingIntent resultPendingIntent = PendingIntent.getActivity(context, 0, 
		    			resultIntent, PendingIntent.FLAG_UPDATE_CURRENT);
		    	mBuilder.setContentIntent(resultPendingIntent);
		    	mNotificationManager = (NotificationManager) activity.getSystemService(Context.NOTIFICATION_SERVICE);
		    	// mId allows you to update the notification later on.
		    	mNotificationManager.notify(mNotificationID, mBuilder.build());
	    	}
	    	// 새로시작하면 알림을 update
	    	else {
	    		mBuilder.setContentTitle(title);
	    		if (title!=null) {
		    		mBuilder.setContentText(title + " is running.");
		    	}
		    	else {
		    		mBuilder.setContentText(" is running.");
		    	}
		    	
		    	Intent resultIntent = activity.getIntent();
		    	
		    	PendingIntent resultPendingIntent = PendingIntent.getActivity(context, 0, 
		    			resultIntent, PendingIntent.FLAG_UPDATE_CURRENT);
		    	mBuilder.setContentIntent(resultPendingIntent);
		    	
		    	// mId allows you to update the notification later on.
		    	mNotificationManager.notify(mNotificationID, mBuilder.build());
	    		
	    	}
	    	//MediaPlayerDel.notificationManager = mNotificationManager;
	    	
    	}
    	catch(VerifyError ve) {
    		
    	}
    }
	
	public static void notifyAppUpdate(Activity activity, String text) {
    	try {
    		Context context = activity.getApplicationContext();
    		mBuilder.setContentTitle(mTitle);
    		if (mTitle!=null) {
	    		mBuilder.setContentText(mTitle + text);
	    	}
	    	else {
	    		mBuilder.setContentText(text);
	    	}
	    	
	    	Intent resultIntent = activity.getIntent();
	    	
	    	PendingIntent resultPendingIntent = PendingIntent.getActivity(context, 0, 
	    			resultIntent, PendingIntent.FLAG_UPDATE_CURRENT);
	    	mBuilder.setContentIntent(resultPendingIntent);
	    	
	    	// mId allows you to update the notification later on.
	    	mNotificationManager.notify(mNotificationID, mBuilder.build());
    		
    	}    	
		catch(VerifyError ve) {
			
		}
    }
	
	/**알림을 제거한다.*/
	public static void cancelNotify() {
		try {
    		// 알림을 제거
    		if (mNotificationManager!=null) {
    			mNotificationManager.cancel(mNotificationID);    		
    		}
    	}catch(Exception e) {
    		
    	}
	}
}
